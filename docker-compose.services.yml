version: '3.9'

services:
  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        SERVICE_NAME: api_gateway
        PYTHON_VERSION: "3.11"
    container_name: api-gateway
    ports:
      - "8000:8000"
    environment:
      SERVICE_NAME: api-gateway
      GATEWAY_HOST: 0.0.0.0
      GATEWAY_PORT: 8000
      GATEWAY_INSTANCE_ID: gateway-1
      GATEWAY_API_KEY: ${GATEWAY_API_KEY:-gateway-key-dev}
      ALLOWED_API_KEYS: ${ALLOWED_API_KEYS:-client-key-1,client-key-2}
      LOG_LEVEL: INFO
    depends_on:
      - auth-service
      - notification-service
      - analytics-service
    networks:
      - microservices
    restart: unless-stopped

  # Authentication Service
  auth-service:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        SERVICE_NAME: auth_service
        PYTHON_VERSION: "3.11"
    container_name: auth-service
    ports:
      - "8001:8001"
    environment:
      SERVICE_NAME: auth-service
      SERVICE_HOST: auth-service
      SERVICE_PORT: 8001
      SERVICE_INSTANCE_ID: auth-1
      AUTH_SERVICE_API_KEY: ${AUTH_SERVICE_API_KEY:-auth-key-dev}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-dev-secret-key-change-in-production}
      LOG_LEVEL: INFO
    networks:
      - microservices
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        SERVICE_NAME: notification_service
        PYTHON_VERSION: "3.11"
    container_name: notification-service
    ports:
      - "8002:8002"
    environment:
      SERVICE_NAME: notification-service
      SERVICE_HOST: notification-service
      SERVICE_PORT: 8002
      SERVICE_INSTANCE_ID: notification-1
      NOTIFICATION_SERVICE_API_KEY: ${NOTIFICATION_SERVICE_API_KEY:-notification-key-dev}
      LOG_LEVEL: INFO
      # Optional: Email service configuration
      SMTP_SERVER: ${SMTP_SERVER:-smtp.gmail.com}
      SMTP_PORT: ${SMTP_PORT:-587}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
    networks:
      - microservices
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Analytics Service
  analytics-service:
    build:
      context: .
      dockerfile: services/Dockerfile
      args:
        SERVICE_NAME: analytics_service
        PYTHON_VERSION: "3.11"
    container_name: analytics-service
    ports:
      - "8003:8003"
    environment:
      SERVICE_NAME: analytics-service
      SERVICE_HOST: analytics-service
      SERVICE_PORT: 8003
      SERVICE_INSTANCE_ID: analytics-1
      ANALYTICS_SERVICE_API_KEY: ${ANALYTICS_SERVICE_API_KEY:-analytics-key-dev}
      LOG_LEVEL: INFO
    networks:
      - microservices
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  microservices:
    driver: bridge
